export declare function noop(): void;
export declare function identity<T>(obj: T): T;
export declare function always<T>(obj: T): () => T;
export declare function isString(obj: any): obj is string;
export declare function isBoolean(obj: any): obj is boolean;
export declare function isSymbol(obj: any): obj is symbol;
export declare function isNumber(obj: any): obj is number;
export declare function isFunction(obj: any): obj is Function;
export declare function isObject(obj: any): obj is {
    [key: string]: any;
};
export declare function isNull(obj: any): obj is null;
export declare function isUndefined(obj: any): obj is undefined;
export declare var isArray: (arg: any) => arg is any[];
export declare function isArrayLike(obj: any): obj is ArrayLike<any>;
export declare function isEmptyArray(obj: any): obj is never[];
export declare var isInteger: (number: number) => boolean;
export declare function ensureArray<T>(value: T[] | T): T[];
